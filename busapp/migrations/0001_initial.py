# Generated by Django 5.1.3 on 2024-12-03 08:52

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('client', 'Клиент'), ('company', 'Транспортная компания')], max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('status', models.CharField(choices=[('legal_entity', 'Юридическое лицо'), ('individual', 'Физическое лицо')], max_length=20, verbose_name='Cтатус')),
                ('name', models.CharField(max_length=20, verbose_name='Имя клиента или организации')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='avatar_client/', verbose_name='Аватарка')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransportCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(help_text='Название транспортной компании', max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('status', models.CharField(choices=[('legal_entity', 'Юридическое лицо'), ('individual', 'Физическое лицо')], max_length=20, verbose_name='Cтатус')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='avatar_company/', verbose_name='Аватарка')),
                ('TIN', models.CharField(blank=True, max_length=20, null=True, verbose_name='ИНН компании')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание компании')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название автобуса')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='bus_photos/', verbose_name='Фото автобуса')),
                ('description', models.TextField(default='Пока нет описания', verbose_name='Описание')),
                ('seats_count', models.PositiveIntegerField(blank=True, default=0, verbose_name='Количество мест')),
                ('comforts', models.CharField(choices=[('wi_fi', 'Wi-Fi'), ('air_conditioning', 'Кондиционер'), ('tv', 'Телевизор'), ('toilet', 'Туалет'), ('reclining_seats', 'Откидывающиеся сиденья'), ('charging_ports', 'Зарядные порты')], default='--', max_length=100, verbose_name='Удобства')),
                ('additional_services', models.TextField(blank=True, verbose_name='Дополнительные услуги')),
                ('rental_price_per_hour', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена аренды за 1 час')),
                ('transport_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buses', to='busapp.transportcompany', verbose_name='Транспортная Компания')),
            ],
        ),
    ]
